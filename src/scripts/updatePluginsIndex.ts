import camelcase from 'camelcase';
import { dirname, parse } from 'path';
import fs from 'fs';
import { Extension, generateImportStatements } from '~/scripts/generateImports';

function updatePluginsIndex(
    path: string,
    category?: string,
    extensions: Extension[] = ['.ts'],
    pascalCase = true,
): void {
    const { result, fileList } = generateImportStatements(path, extensions, pascalCase);

    const categoryName = category || dirname(fileList[0]).split('/').pop();

    let plugins: string = '';

    fileList.forEach((filePath) => {
        const { name } = parse(filePath);
        plugins += `${camelcase(name, { pascalCase })}, `;
    });

    plugins = plugins.slice(0, plugins.length - 2);

    const functionName = camelcase(`get-${categoryName}-plugins`);

    const indexExt = extensions[0];
    const indexCode = `// This file was automatically generated by updatePluginsIndex.ts
${result}
function ${functionName}() {
    return [${plugins}];
}

export { ${functionName} };
`;
    const destination = `${path}/index${indexExt}`;

    fs.writeFileSync(destination, indexCode);
    console.log(`[updatePluginsIndex] Successfully update index file: ${destination}`);
}

export { updatePluginsIndex };
